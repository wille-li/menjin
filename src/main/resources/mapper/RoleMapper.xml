<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SQL 关键字请使用大写字母, 表名, 属性名用小写 -->
<mapper namespace="com.menjin.user.mapper.RoleMapper">
	<resultMap type="com.menjin.user.model.Role" id="roleResultMap">
		<id column="id" property="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="allFiled" >
	    name, description
	</sql>
	
	<sql id="condition">
	    <if test="null!=params" >
	        <if test="null!=params.checkmessage and ''!=params.checkmessage" >
	            OR name LIKE '%${params.checkmessage}%'
	            OR description LIKE '%${params.checkmessage}%'
	        </if>
	    </if>
	</sql>
	
	<insert id="insert" parameterType="com.menjin.user.model.Role" useGeneratedKeys="true"
		keyColumn="id">
		INSERT INTO t_role(
        <include refid="allFiled"/>) VALUES (
        #{name}, #{description})
	</insert>
	
	<select id="selectByPrimaryKey" parameterType="com.menjin.user.model.Role" resultMap="roleResultMap">
		select * from t_role where id = #{id}
	</select>
	
	<select id="selectByRoleName" parameterType="String" resultMap="roleResultMap">
		select * from t_role where name = #{name}
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="com.menjin.user.model.Role">
		delete from t_role  where id = #{id}
	</delete>
	
	<update id="updateByPrimaryKey" parameterType="com.menjin.user.model.Role">
		update t_role set name=#{name},description=#{description} where id = #{id}
	</update>
	
	<insert id="insertUserRoles" parameterType="com.menjin.user.model.UserRoles">
		INSERT INTO t_user_role(user_id,role_id) VALUES (#{userId}, #{roleId})
	</insert>
	
	<delete id="deleteRoleIdByUserId" parameterType="Integer">
		delete from t_user_role  where user_id = #{userId}
	</delete>
	
	<select id="searchRoleByUserId" parameterType="Integer" resultMap="roleResultMap">
		select r.* from t_role r where r.id in (
		select t.role_id from t_user_role t where t.user_id = #{userId})
	</select>
	
	<select id="searchRoleByUsername" parameterType="String" resultMap="roleResultMap">
		select r.* from t_role r where r.id in (
		select t.role_id from t_user_role t where t.user_id in (
		select u.id from t_user u where u.username = #{username}))
	</select>
	
	<select id="searchNoRoleByUsername" parameterType="String" resultMap="roleResultMap">
		select r.* from t_role r where r.id not in (
		select t.role_id from t_user_role t where t.user_id in (
		select u.id from t_user u where u.username = #{username}))
	</select>
	
	<select id="searchRoleByResourceId" parameterType="Integer" resultMap="roleResultMap">
		select r.* from t_role r ,t_role_resource rr 
		where rr.role_id = r.id and rr.resource_id = #{resourceId}
	</select>
	
	<select id="selectByPage" resultMap="roleResultMap">
	    SELECT 
		t1.*
		FROM t_role t1
		INNER JOIN 
		(
		    SELECT id FROM t_role WHERE 1 = 1
		    <include refid="condition" />
		    <if test="null!=page and null!=page.pageSize">
		      LIMIT #{page.startRowNum}, #{page.pageSize}
		    </if>
		) AS t2
		ON t1.id = t2.id
		WHERE 1 = 1
		<if test="null != orderByField">
		    ORDER BY #{orderByField}
		</if>
	</select>
	
	<select id="selectCount" resultType="java.lang.Integer" >
	    SELECT COUNT(1) FROM t_role where 1 = 1
	    <include refid="condition" />
	</select>
	
</mapper>  